{"ast":null,"code":"//IMPORT\nimport BDD from '../bdd.js';\nimport { onMounted, ref, watch } from 'vue'; //COMPONENTS\n\nimport RestaurantRow from '../components/RestaurantRow.vue';\nexport default {\n  name: \"MyHome\",\n  components: {\n    RestaurantRow\n  },\n\n  setup() {\n    class Restaurant {\n      constructor(name, note, image, drive_time) {\n        this.name = name;\n        this.note = note;\n        this.image = image;\n        this.drive_time = drive_time;\n      }\n\n    }\n\n    let data_restaurant = ref([]);\n    let all_restaurant = [];\n\n    const makeDataRestaurant = () => {\n      let three_restaurant = [];\n\n      for (const restaurant of BDD) {\n        const new_restaurant = new Restaurant(restaurant.name, restaurant.note, restaurant.image, restaurant.drive_time); // make all restaurant array\n\n        all_restaurant.push(new_restaurant);\n\n        if (three_restaurant.length === 2) {\n          three_restaurant.push(new_restaurant);\n          data_restaurant.value.push(three_restaurant);\n          three_restaurant = [];\n        } else {\n          three_restaurant.push(new_restaurant);\n        }\n      }\n    }; // User search restaurant\n\n\n    let user_search_restaurant = ref('');\n    let search_restaurant = ref([]);\n    watch(user_search_restaurant, new_value => {\n      let regex = RegExp(new_value.toLowerCase());\n      let new_search_restaurant = all_restaurant.filter(restaurant => regex.test(restaurant.name.toLowerCase()));\n\n      if (new_value == 0) {\n        search_restaurant.value = [];\n      } else {\n        search_restaurant.value = new_search_restaurant;\n      } //  => en ternaire :   new_value == 0 ? search_restaurant.value = [] : search_restaurant.value = new_search_restaurant;\n\n    }); //\n\n    onMounted(makeDataRestaurant); // return\n\n    return {\n      data_restaurant,\n      user_search_restaurant,\n      search_restaurant\n    };\n  }\n\n};","map":{"version":3,"mappings":"AA2BA;AACA,OAAOA,GAAP,MAAgB,WAAhB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,KAAzB,QAAsC,KAAtC,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,eAAe;EACXC,IAAI,EAAE,QADK;EAEXC,UAAU,EAAE;IACRF;EADQ,CAFD;;EAKXG,KAAK,GAAG;IACJ,MAAMC,UAAN,CAAiB;MACbC,WAAW,CAACJ,IAAD,EAAOK,IAAP,EAAaC,KAAb,EAAoBC,UAApB,EAAgC;QACvC,KAAKP,IAAL,GAAYA,IAAZ;QACA,KAAKK,IAAL,GAAYA,IAAZ;QACA,KAAKC,KAAL,GAAaA,KAAb;QACA,KAAKC,UAAL,GAAkBA,UAAlB;MACJ;;IANa;;IASjB,IAAIC,eAAc,GAAIX,GAAG,CAAC,EAAD,CAAzB;IACA,IAAIY,cAAa,GAAI,EAArB;;IAEA,MAAMC,kBAAiB,GAAI,MAAM;MAC7B,IAAIC,gBAAe,GAAI,EAAvB;;MAEA,KAAK,MAAMC,UAAX,IAAyBjB,GAAzB,EAA8B;QAC1B,MAAMkB,cAAa,GAAI,IAAIV,UAAJ,CAAeS,UAAU,CAACZ,IAA1B,EAAgCY,UAAU,CAACP,IAA3C,EAAiDO,UAAU,CAACN,KAA5D,EAAmEM,UAAU,CAACL,UAA9E,CAAvB,CAD0B,CAE1B;;QAEAE,cAAc,CAACK,IAAf,CAAoBD,cAApB;;QAEA,IAAIF,gBAAgB,CAACI,MAAjB,KAA4B,CAAhC,EAAmC;UAC/BJ,gBAAgB,CAACG,IAAjB,CAAsBD,cAAtB;UACAL,eAAe,CAACQ,KAAhB,CAAsBF,IAAtB,CAA2BH,gBAA3B;UACAA,gBAAe,GAAI,EAAnB;QACJ,CAJA,MAIO;UACHA,gBAAgB,CAACG,IAAjB,CAAsBD,cAAtB;QACJ;MACJ;IACJ,CAjBA,CAbI,CAgCJ;;;IACA,IAAII,sBAAqB,GAAIpB,GAAG,CAAC,EAAD,CAAhC;IACA,IAAIqB,iBAAgB,GAAIrB,GAAG,CAAC,EAAD,CAA3B;IAEAC,KAAK,CAACmB,sBAAD,EAAyBE,SAAQ,IAAK;MACvC,IAAIC,KAAI,GAAIC,MAAM,CAACF,SAAS,CAACG,WAAV,EAAD,CAAlB;MACA,IAAIC,qBAAoB,GAAId,cAAc,CAACe,MAAf,CAAsBZ,UAAS,IAAKQ,KAAK,CAACK,IAAN,CAAWb,UAAU,CAACZ,IAAX,CAAgBsB,WAAhB,EAAX,CAApC,CAA5B;;MAEA,IAAIH,SAAQ,IAAK,CAAjB,EAAoB;QACjBD,iBAAiB,CAACF,KAAlB,GAA0B,EAA1B;MACH,CAFA,MAEO;QACHE,iBAAiB,CAACF,KAAlB,GAA0BO,qBAA1B;MACJ,CARuC,CAUvC;;IACH,CAXI,CAAL,CApCI,CAiDJ;;IACA3B,SAAS,CAACc,kBAAD,CAAT,CAlDI,CAoDJ;;IACA,OAAO;MACHF,eADG;MAEHS,sBAFG;MAGHC;IAHG,CAAP;EAKH;;AA/DU,CAAf","names":["BDD","onMounted","ref","watch","RestaurantRow","name","components","setup","Restaurant","constructor","note","image","drive_time","data_restaurant","all_restaurant","makeDataRestaurant","three_restaurant","restaurant","new_restaurant","push","length","value","user_search_restaurant","search_restaurant","new_value","regex","RegExp","toLowerCase","new_search_restaurant","filter","test"],"sourceRoot":"","sources":["/Users/aduquelzar/Desktop/vue3_ubereats/src/page/home.vue"],"sourcesContent":["<template>\n    <div class=\"MyHome\">\n        <div class=\"header\">\n            <img src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/ee037401cb5d31b23cf780808ee4ec1f.svg\"\n                alt=\"logo ue\">\n            <div class=\"wrapper--input\">\n                <input v-model=\"user_search_restaurant\" type=\"text\" placeholder=\"De quoi avez-vous envie ?\">\n                <div class=\"search\">\n                    <router-link :to=\"{ name: 'RestaurantID', params: {name: 'test'} }\">\n                        <div v-for=\"(restaurant, i) in search_restaurant\" :key=\"i\"\n                            class=\"container--restaurant--search\">\n                            <div class=\"wrapper--img\">\n                                <img :src=\"restaurant.image\" alt=\"\">\n                            </div>\n                            <p>{{ restaurant.name }}</p>\n                        </div>\n                    </router-link>\n                </div>\n            </div>\n        </div>\n        <div class=\"banniere\">\n        </div>\n        <RestaurantRow v-for=\"(data, i) in data_restaurant\" :key=\"i\" :three_restaurant=\"data\"></RestaurantRow>\n    </div>\n</template>\n\n<script>\n//IMPORT\nimport BDD from '../bdd.js'\nimport { onMounted, ref, watch } from 'vue'\n\n//COMPONENTS\nimport RestaurantRow from '../components/RestaurantRow.vue'\n\nexport default {\n    name: \"MyHome\",\n    components: {\n        RestaurantRow\n    },\n    setup() {\n        class Restaurant {\n            constructor(name, note, image, drive_time) {\n                this.name = name\n                this.note = note\n                this.image = image\n                this.drive_time = drive_time\n            }\n        }\n\n        let data_restaurant = ref([]);\n        let all_restaurant = [];\n\n        const makeDataRestaurant = () => {\n            let three_restaurant = [];\n\n            for (const restaurant of BDD) {\n                const new_restaurant = new Restaurant(restaurant.name, restaurant.note, restaurant.image, restaurant.drive_time)\n                // make all restaurant array\n\n                all_restaurant.push(new_restaurant)\n\n                if (three_restaurant.length === 2) {\n                    three_restaurant.push(new_restaurant);\n                    data_restaurant.value.push(three_restaurant);\n                    three_restaurant = [];\n                } else {\n                    three_restaurant.push(new_restaurant);\n                }\n            }\n        }\n\n        // User search restaurant\n        let user_search_restaurant = ref('');\n        let search_restaurant = ref([])\n\n        watch(user_search_restaurant, new_value => {\n            let regex = RegExp(new_value.toLowerCase());\n            let new_search_restaurant = all_restaurant.filter(restaurant => regex.test(restaurant.name.toLowerCase()));\n\n            if (new_value == 0) {\n               search_restaurant.value = []\n            } else {\n                search_restaurant.value = new_search_restaurant;\n            }\n\n            //  => en ternaire :   new_value == 0 ? search_restaurant.value = [] : search_restaurant.value = new_search_restaurant;\n        })\n\n        //\n        onMounted(makeDataRestaurant);\n\n        // return\n        return {\n            data_restaurant,\n            user_search_restaurant,\n            search_restaurant,\n        }\n    },\n}\n</script>\n\n<style lang=\"scss\">\n.MyHome {\n    .header {\n        height: 120px;\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n\n        img {\n            width: 200px;\n        }\n\n        .wrapper--input {\n            position: relative;\n\n            input {\n                background-color: #f6f6f6;\n                border: none;\n                height: 60px;\n                width: 400px;\n                outline: 0;\n                padding-left: 20px;\n            }\n\n            .search {\n                position: absolute;\n                top: 100%;\n                width: 100%;\n                background-color: #fff;\n\n                .container--restaurant--search {\n                    display: flex;\n                    align-items: center;\n                    padding: 10px;\n\n                    &:hover {\n                        background-color: #f6f6f6;\n                        cursor: pointer;\n                    }\n\n                    .wrapper--img {\n                        height: 50px;\n                    \n                        margin-right: 25px;\n                        border-radius: 10%;\n                        overflow: hidden;\n\n                        img {\n                            height: 100%;\n                            width: auto;\n                        }\n                    }\n                }\n            }\n\n        }\n\n    }\n\n    .banniere {\n        height: 200px;\n        width: 100%;\n        background-image: url('https://www.ubereats.com/restaurant/_static/7b308f7cbbf8e335ceda0447a8bd7c63.png');\n        background-size: cover;\n        background-position: center center;\n    }\n}\n</style>"]},"metadata":{},"sourceType":"module"}